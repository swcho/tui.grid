import { Store, CellValue, RowKey, RowAttributes, RowAttributeValue, PageOptions, Dictionary } from '../store/types';
import { OptRow, OptAppendRow, OptRemoveRow } from '../types';
export declare function setValue({ column, data, id }: Store, rowKey: RowKey, columnName: string, value: CellValue): void;
export declare function isUpdatableRowAttr(name: keyof RowAttributes, checkDisabled: boolean, allDisabled: boolean): boolean;
export declare function setRowAttribute({ data }: Store, rowKey: RowKey, attrName: keyof RowAttributes, value: RowAttributeValue): void;
export declare function setAllRowAttribute({ data }: Store, attrName: keyof RowAttributes, value: RowAttributeValue): void;
export declare function setColumnValues(store: Store, columnName: string, value: CellValue, checkCellState?: boolean): void;
export declare function check(store: Store, rowKey: RowKey): void;
export declare function uncheck(store: Store, rowKey: RowKey): void;
export declare function checkAll(store: Store): void;
export declare function uncheckAll(store: Store): void;
export declare function changeSortBtn({ data }: Store, columnName: string, ascending: boolean): void;
export declare function sort(store: Store, columnName: string, ascending: boolean): void;
export declare function paste(store: Store, pasteData: string[][]): void;
export declare function setDisabled(store: Store, disabled: boolean): void;
export declare function setRowDisabled(store: Store, disabled: boolean, rowKey: RowKey, withCheckbox: boolean): void;
export declare function setRowCheckDisabled(store: Store, disabled: boolean, rowKey: RowKey): void;
export declare function appendRow({ data, column, rowCoords, dimension, id, renderState }: Store, row: OptRow, options: OptAppendRow): void;
export declare function removeRow({ data, rowCoords, id, renderState }: Store, rowKey: RowKey, options: OptRemoveRow): void;
export declare function clearData({ data, id, renderState }: Store): void;
export declare function resetData({ data, column, dimension, rowCoords, id, renderState }: Store, inputData: OptRow[]): void;
export declare function addRowClassName(store: Store, rowKey: RowKey, className: string): void;
export declare function removeRowClassName(store: Store, rowKey: RowKey, className: string): void;
export declare function addCellClassName(store: Store, rowKey: RowKey, columnName: string, className: string): void;
export declare function removeCellClassName(store: Store, rowKey: RowKey, columnName: string, className: string): void;
export declare function setRowHeight({ data, rowCoords }: Store, rowIndex: number, rowHeight: number): void;
export declare function setPagination({ data }: Store, pageOptions: PageOptions): void;
export declare function changeColumnHeadersByName({ column }: Store, columnsMap: Dictionary<string>): void;
